.TH "Builtin_attributes" 3 2018-09-18 OCamldoc "OCaml library"
.SH NAME
Builtin_attributes \- no description
.SH Module
Module   Builtin_attributes
.SH Documentation
.sp
Module
.BI "Builtin_attributes"
 : 
.B sig  end

.sp

.sp

.sp
.sp

.I val check_deprecated 
: 
.B Location.t -> Parsetree.attributes -> string -> unit
.sp

.sp

.I val check_deprecated_inclusion 
: 
.B def:Location.t ->
.B   use:Location.t ->
.B   Location.t -> Parsetree.attributes -> Parsetree.attributes -> string -> unit
.sp

.sp

.I val deprecated_of_attrs 
: 
.B Parsetree.attributes -> string option
.sp

.sp

.I val deprecated_of_sig 
: 
.B Parsetree.signature -> string option
.sp

.sp

.I val deprecated_of_str 
: 
.B Parsetree.structure -> string option
.sp

.sp

.I val check_deprecated_mutable 
: 
.B Location.t -> Parsetree.attributes -> string -> unit
.sp

.sp

.I val check_deprecated_mutable_inclusion 
: 
.B def:Location.t ->
.B   use:Location.t ->
.B   Location.t -> Parsetree.attributes -> Parsetree.attributes -> string -> unit
.sp

.sp

.I val error_of_extension 
: 
.B Parsetree.extension -> Location.error
.sp

.sp

.I val warning_attribute 
: 
.B ?ppwarning:bool -> Parsetree.attribute -> unit
.sp
Apply warning settings from the specified attribute\&.
"ocaml\&.warning"/"ocaml\&.warnerror" (and variants without the prefix)
are processed and other attributes are ignored\&.
.sp
Also implement ocaml\&.ppwarning (unless ~ppwarning:false is
passed)\&.

.sp

.I val warning_scope 
: 
.B ?ppwarning:bool -> Parsetree.attributes -> (unit -> 'a) -> 'a
.sp
Execute a function in a new scope for warning settings\&.  This
means that the effect of any call to 
.B warning_attribute
during
the execution of this function will be discarded after
execution\&.
.sp
The function also takes a list of attributes which are processed
with 
.B warning_attribute
in the fresh scope before the function
is executed\&.

.sp

.I val warn_on_literal_pattern 
: 
.B Parsetree.attributes -> bool
.sp

.sp

.I val explicit_arity 
: 
.B Parsetree.attributes -> bool
.sp

.sp

.I val immediate 
: 
.B Parsetree.attributes -> bool
.sp

.sp

.I val has_unboxed 
: 
.B Parsetree.attributes -> bool
.sp

.sp

.I val has_boxed 
: 
.B Parsetree.attributes -> bool
.sp

.sp
