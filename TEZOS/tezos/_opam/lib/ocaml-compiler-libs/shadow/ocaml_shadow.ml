module Do_not_use_directly = struct end
module Afl_instrument = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Afl_instrument instead"]
module Alias_analysis = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Alias_analysis instead"]
module Allocated_const = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Allocated_const instead"]
module Annot = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Arch = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Arch instead"]
module Arg_helper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Arg_helper instead"]
module Asmgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Asmgen instead"]
module Asmlibrarian = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Asmlibrarian instead"]
module Asmlink = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Asmlink instead"]
module Asmpackager = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Asmpackager instead"]
module Ast_helper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Ast_helper instead"]
module Ast_invariants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Ast_invariants instead"]
module Ast_iterator = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Ast_iterator instead"]
module Ast_mapper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Ast_mapper instead"]
module Asttypes = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Attr_helper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Attr_helper instead"]
module Augment_specialised_args = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Augment_specialised_args instead"]
module Backend_intf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Branch_relaxation = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Branch_relaxation instead"]
module Branch_relaxation_intf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Branch_relaxation_intf instead"]
module Btype = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Btype instead"]
module Build_export_info = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Build_export_info instead"]
module Builtin_attributes = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Builtin_attributes instead"]
module Bytegen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Bytegen instead"]
module Bytelibrarian = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Bytelibrarian instead"]
module Bytelink = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Bytelink instead"]
module Bytepackager = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Bytepackager instead"]
module Bytesections = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Bytesections instead"]
module CSE = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.CSE instead"]
module CSEgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.CSEgen instead"]
module Ccomp = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Ccomp instead"]
module Clambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Clambda instead"]
module Clflags = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Clflags instead"]
module Closure = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Closure instead"]
module Closure_conversion = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Closure_conversion instead"]
module Closure_conversion_aux = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Closure_conversion_aux instead"]
module Closure_element = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Closure_element instead"]
module Closure_id = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Closure_id instead"]
module Closure_offsets = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Closure_offsets instead"]
module Cmi_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Cmi_format instead"]
module Cmm = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Cmm instead"]
module Cmmgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Cmmgen instead"]
module Cmo_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Cmt_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Cmt_format instead"]
module Cmx_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Coloring = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Coloring instead"]
module Comballoc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Comballoc instead"]
module Compdynlink = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Compdynlink instead"]
module Compenv = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Compenv instead"]
module Compilation_unit = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Compilation_unit instead"]
module Compile = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Compile instead"]
module Compilenv = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Compilenv instead"]
module Compmisc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Compmisc instead"]
module Compplugin = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Compplugin instead"]
module Config = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Config instead"]
module Consistbl = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Consistbl instead"]
module Ctype = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Ctype instead"]
module Datarepr = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Datarepr instead"]
module Deadcode = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Deadcode instead"]
module Debuginfo = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Debuginfo instead"]
module Depend = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Depend instead"]
module Dll = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Dll instead"]
module Docstrings = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Docstrings instead"]
module Effect_analysis = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Effect_analysis instead"]
module Emit = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Emit instead"]
module Emitaux = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Emitaux instead"]
module Emitcode = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Emitcode instead"]
module Env = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Env instead"]
module Envaux = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Envaux instead"]
module Errors = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Errors instead"]
module Export_id = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Export_id instead"]
module Export_info = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Export_info instead"]
module Export_info_for_pack = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Export_info_for_pack instead"]
module Expunge = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Extract_projections = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Extract_projections instead"]
module Find_recursive_functions = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Find_recursive_functions instead"]
module Flambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Flambda instead"]
module Flambda_invariants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Flambda_invariants instead"]
module Flambda_iterators = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Flambda_iterators instead"]
module Flambda_to_clambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Flambda_to_clambda instead"]
module Flambda_utils = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Flambda_utils instead"]
module Freshening = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Freshening instead"]
module Genprintval = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamltoplevel.Genprintval instead"]
module Id_types = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Id_types instead"]
module Ident = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Ident instead"]
module Identifiable = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Identifiable instead"]
module Import_approx = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Import_approx instead"]
module Includeclass = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Includeclass instead"]
module Includecore = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Includecore instead"]
module Includemod = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Includemod instead"]
module Inconstant_idents = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Inconstant_idents instead"]
module Initialize_symbol_to_let_symbol = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Initialize_symbol_to_let_symbol instead"]
module Inline_and_simplify = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Inline_and_simplify instead"]
module Inline_and_simplify_aux = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Inline_and_simplify_aux instead"]
module Inlining_cost = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Inlining_cost instead"]
module Inlining_decision = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Inlining_decision instead"]
module Inlining_decision_intf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Inlining_stats = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Inlining_stats instead"]
module Inlining_stats_types = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Inlining_stats_types instead"]
module Inlining_transforms = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Inlining_transforms instead"]
module Instruct = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Instruct instead"]
module Interf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Interf instead"]
module Interval = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Interval instead"]
module Invariant_params = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Invariant_params instead"]
module Lambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Lambda instead"]
module Lexer = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Lexer instead"]
module Lift_code = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Lift_code instead"]
module Lift_constants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Lift_constants instead"]
module Lift_let_to_initialize_symbol = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Lift_let_to_initialize_symbol instead"]
module Linearize = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Linearize instead"]
module Linkage_name = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Linkage_name instead"]
module Linscan = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Linscan instead"]
module Liveness = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Liveness instead"]
module Location = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Location instead"]
module Longident = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Longident instead"]
module Mach = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Mach instead"]
module Main = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Main_args = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Main_args instead"]
module Makedepend = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Makedepend instead"]
module Matching = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Matching instead"]
module Meta = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Meta instead"]
module Middle_end = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Middle_end instead"]
module Misc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Misc instead"]
module Mtype = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Mtype instead"]
module Mutable_variable = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Mutable_variable instead"]
module Numbers = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Numbers instead"]
module Opcodes = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Opcodes instead"]
module Oprint = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Oprint instead"]
module Optcompile = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Optcompile instead"]
module Opterrors = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Opterrors instead"]
module Optmain = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Outcometree = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Parameter = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Parameter instead"]
module Parmatch = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Parmatch instead"]
module Parse = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Parse instead"]
module Parser = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Parser instead"]
module Parsetree = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Pass_wrapper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Pass_wrapper instead"]
module Path = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Path instead"]
module Pparse = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Pparse instead"]
module Pprintast = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Pprintast instead"]
module Predef = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Predef instead"]
module Primitive = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Primitive instead"]
module Printast = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Printast instead"]
module Printclambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Printclambda instead"]
module Printcmm = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Printcmm instead"]
module Printinstr = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlbytecomp.Printinstr instead"]
module Printlambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Printlambda instead"]
module Printlinear = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Printlinear instead"]
module Printmach = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Printmach instead"]
module Printtyp = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Printtyp instead"]
module Printtyped = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Printtyped instead"]
module Proc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Proc instead"]
module Profile = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Profile instead"]
module Projection = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Projection instead"]
module Ref_to_variables = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Ref_to_variables instead"]
module Reg = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Reg instead"]
module Reload = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Reload instead"]
module Reloadgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Reloadgen instead"]
module Remove_free_vars_equal_to_args = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Remove_free_vars_equal_to_args instead"]
module Remove_unused_arguments = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Remove_unused_arguments instead"]
module Remove_unused_closure_vars = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Remove_unused_closure_vars instead"]
module Remove_unused_program_constructs = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Remove_unused_program_constructs instead"]
module Runtimedef = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Runtimedef instead"]
module Schedgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Schedgen instead"]
module Scheduling = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Scheduling instead"]
module Selectgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Selectgen instead"]
module Selection = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Selection instead"]
module Semantics_of_primitives = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Semantics_of_primitives instead"]
module Set_of_closures_id = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Set_of_closures_id instead"]
module Set_of_closures_origin = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Set_of_closures_origin instead"]
module Share_constants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Share_constants instead"]
module Simple_value_approx = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Simple_value_approx instead"]
module Simplif = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Simplif instead"]
module Simplify_boxed_integer_ops = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Simplify_boxed_integer_ops instead"]
module Simplify_boxed_integer_ops_intf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Simplify_common = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Simplify_common instead"]
module Simplify_primitives = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Simplify_primitives instead"]
module Spacetime_profiling = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Spacetime_profiling instead"]
module Spill = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Spill instead"]
module Split = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Split instead"]
module Static_exception = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Static_exception instead"]
module Strmatch = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Strmatch instead"]
module Strongly_connected_components = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Strongly_connected_components instead"]
module Stypes = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Stypes instead"]
module Subst = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Subst instead"]
module Switch = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Switch instead"]
module Symbol = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Symbol instead"]
module Symtable = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Symtable instead"]
module Syntaxerr = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Syntaxerr instead"]
module Tag = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Tag instead"]
module Targetint = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Targetint instead"]
module Tast_mapper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Tast_mapper instead"]
module Tbl = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Tbl instead"]
module Terminfo = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Terminfo instead"]
module Topdirs = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamltoplevel.Topdirs instead"]
module Toploop = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamltoplevel.Toploop instead"]
module Topmain = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamltoplevel.Topmain instead"]
module Topstart = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Trace = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamltoplevel.Trace instead"]
module Translattribute = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Translattribute instead"]
module Translclass = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Translclass instead"]
module Translcore = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Translcore instead"]
module Translmod = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Translmod instead"]
module Translobj = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Translobj instead"]
module Typeclass = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Typeclass instead"]
module Typecore = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Typecore instead"]
module Typedecl = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Typedecl instead"]
module Typedtree = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Typedtree instead"]
module TypedtreeIter = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.TypedtreeIter instead"]
module TypedtreeMap = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.TypedtreeMap instead"]
module Typemod = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Typemod instead"]
module Typeopt = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Typeopt instead"]
module Types = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Types instead"]
module Typetexp = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Typetexp instead"]
module Un_anf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Un_anf instead"]
module Unbox_closures = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Unbox_closures instead"]
module Unbox_free_vars_of_closures = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Unbox_free_vars_of_closures instead"]
module Unbox_specialised_args = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Unbox_specialised_args instead"]
module Untypeast = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Untypeast instead"]
module Var_within_closure = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Var_within_closure instead"]
module Variable = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.Variable instead"]
module Warnings = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamlcommon.Warnings instead"]
module X86_ast = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module X86_dsl = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.X86_dsl instead"]
module X86_gas = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.X86_gas instead"]
module X86_masm = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.X86_masm instead"]
module X86_proc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocamloptcomp.X86_proc instead"]
