open Ppx_core
open Ppx_type_conv.Std


let foo =
  Type_conv.add "foo"
    ~str_type_decl:(Type_conv.Generator.make_noarg
                      (fun ~loc ~path:_ _ -> [%str let x = 42]))
;;

let bar =
  Type_conv.add "bar"
    ~str_type_decl:(Type_conv.Generator.make_noarg
                      ~deps:[foo]
                      (fun ~loc ~path:_ _ -> [%str let () = printf "x = %d\n" x]))
;;

type t = int [@@deriving bar]

[%%expect{|
Line _, characters 25-28:
Error: Deriver foo is needed for bar, you need to add it before in the list
|}]

type t = int [@@deriving bar, foo]

[%%expect{|
Line _, characters 25-33:
Error: Deriver foo is needed for bar, you need to add it before in the list
|}]

type t = int [@@deriving foo, bar]

[%%expect{|
x = 42
|}]
