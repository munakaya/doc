(jbuild_version 1)

(rule
 ((targets (ext.out))
  (deps (ext.cppo source.sh))
  (action
   (with-stdout-to ${@} (run ${bin:cppo} -x "rot13:tr '[a-z]' '[n-za-m]'" -x "source:./source.sh '%F' %B %E" ${<})))))

(rule
 ((targets (comments.out))
  (deps (comments.cppo))
  (action
   (with-stdout-to ${@} (run ${bin:cppo} ${<})))))

(rule
 ((targets (cond.out))
  (deps (cond.cppo))
  (action
   (with-stdout-to ${@} (run ${bin:cppo} ${<})))))

(rule
 ((targets (tuple.out))
  (deps (tuple.cppo))
  (action
   (with-stdout-to ${@} (run ${bin:cppo} ${<})))))

(rule
 ((targets (loc.out))
  (deps (loc.cppo))
  (action
   (with-stdout-to ${@} (run ${bin:cppo} ${<})))))

(rule
 ((targets (paren_arg.out))
  (deps (paren_arg.cppo))
  (action
   (with-stdout-to ${@} (run ${bin:cppo} ${<})))))

(rule
 ((targets (unmatched.out))
  (deps (unmatched.cppo))
  (action
   (with-stdout-to ${@} (run ${bin:cppo} ${<})))))

(rule
 ((targets (version.out))
  (deps (version.cppo))
  (action
   (with-stdout-to ${@} (run ${bin:cppo} -V X:123.05.2-alpha.1+foo-2.1 ${<})))))

(alias
 ((name runtest)
  (deps (ext.ref ext.out))
  (action (run diff -u ext.ref ext.out))))

(alias
 ((name runtest)
  (deps (comments.ref comments.out))
  (action (run diff -u comments.ref comments.out))))

(alias
 ((name runtest)
  (deps (cond.ref cond.out))
  (action (run diff -u cond.ref cond.out))))

(alias
 ((name runtest)
  (deps (tuple.ref tuple.out))
  (action (run diff -u tuple.ref tuple.out))))

(alias
 ((name runtest)
  (deps (loc.ref loc.out))
  (action (run diff -u loc.ref loc.out))))

(alias
 ((name runtest)
  (deps (paren_arg.ref paren_arg.out))
  (action (run diff -u paren_arg.ref paren_arg.out))))

(alias
 ((name runtest)
  (deps (version.out))))

(alias
 ((name runtest)
  (deps (unmatched.ref unmatched.out))
  (action (run diff -u unmatched.ref unmatched.out))))

(alias
 ((name runtest)
  (deps (test.cppo incl.cppo incl2.cppo))
  ;; we're creating this test.cppo.out file only to avoid
  ;; seeing this output when running the test. We could just redirect
  ;; to /dev/null but then we'd need a shell.
  (action (with-stdout-to test.cppo.out (run ${bin:cppo} ${<})))))
